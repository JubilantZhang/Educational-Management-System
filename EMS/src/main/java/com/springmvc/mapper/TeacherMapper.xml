<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.po.Teacher" >
    <id column="TeacherID" property="teacherID" jdbcType="CHAR" />
    <result column="TeacherName" property="teacherName" jdbcType="VARCHAR" />
    <result column="Sex" property="sex" jdbcType="CHAR" />
    <result column="Birthday" property="birthday" jdbcType="DATE" />
    <result column="DeptID" property="deptID" jdbcType="CHAR" />
    <result column="Phone" property="phone" jdbcType="CHAR" />
    <result column="AccountNumber" property="accountNumber" jdbcType="VARCHAR" />
    <result column="Degree" property="degree" jdbcType="CHAR" />
    <result column="Title" property="title" jdbcType="CHAR" />
    <result column="Comment" property="comment" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TeacherID, TeacherName, Sex, Birthday, DeptID, Phone, AccountNumber, Degree, Title, 
    Comment
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.springmvc.po.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where TeacherID = #{teacherID,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teacher
    where TeacherID = #{teacherID,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.po.TeacherExample" >
    delete from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.po.Teacher" >
    insert into teacher (TeacherID, TeacherName, Sex, 
      Birthday, DeptID, Phone, AccountNumber, 
      Degree, Title, Comment)
    values (#{teacherID,jdbcType=CHAR}, #{teacherName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{deptID,jdbcType=CHAR}, #{phone,jdbcType=CHAR}, #{accountNumber,jdbcType=VARCHAR}, 
      #{degree,jdbcType=CHAR}, #{title,jdbcType=CHAR}, #{comment,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.po.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherID != null" >
        TeacherID,
      </if>
      <if test="teacherName != null" >
        TeacherName,
      </if>
      <if test="sex != null" >
        Sex,
      </if>
      <if test="birthday != null" >
        Birthday,
      </if>
      <if test="deptID != null" >
        DeptID,
      </if>
      <if test="phone != null" >
        Phone,
      </if>
      <if test="accountNumber != null" >
        AccountNumber,
      </if>
      <if test="degree != null" >
        Degree,
      </if>
      <if test="title != null" >
        Title,
      </if>
      <if test="comment != null" >
        Comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherID != null" >
        #{teacherID,jdbcType=CHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="deptID != null" >
        #{deptID,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="accountNumber != null" >
        #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=CHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.po.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update teacher
    <set >
      <if test="record.teacherID != null" >
        TeacherID = #{record.teacherID,jdbcType=CHAR},
      </if>
      <if test="record.teacherName != null" >
        TeacherName = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        Sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null" >
        Birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.deptID != null" >
        DeptID = #{record.deptID,jdbcType=CHAR},
      </if>
      <if test="record.phone != null" >
        Phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.accountNumber != null" >
        AccountNumber = #{record.accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null" >
        Degree = #{record.degree,jdbcType=CHAR},
      </if>
      <if test="record.title != null" >
        Title = #{record.title,jdbcType=CHAR},
      </if>
      <if test="record.comment != null" >
        Comment = #{record.comment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teacher
    set TeacherID = #{record.teacherID,jdbcType=CHAR},
      TeacherName = #{record.teacherName,jdbcType=VARCHAR},
      Sex = #{record.sex,jdbcType=CHAR},
      Birthday = #{record.birthday,jdbcType=DATE},
      DeptID = #{record.deptID,jdbcType=CHAR},
      Phone = #{record.phone,jdbcType=CHAR},
      AccountNumber = #{record.accountNumber,jdbcType=VARCHAR},
      Degree = #{record.degree,jdbcType=CHAR},
      Title = #{record.title,jdbcType=CHAR},
      Comment = #{record.comment,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.po.Teacher" >
    update teacher
    <set >
      <if test="teacherName != null" >
        TeacherName = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        Sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        Birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="deptID != null" >
        DeptID = #{deptID,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        Phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="accountNumber != null" >
        AccountNumber = #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        Degree = #{degree,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        Title = #{title,jdbcType=CHAR},
      </if>
      <if test="comment != null" >
        Comment = #{comment,jdbcType=VARCHAR},
      </if>
    </set>
    where TeacherID = #{teacherID,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.po.Teacher" >
    update teacher
    set TeacherName = #{teacherName,jdbcType=VARCHAR},
      Sex = #{sex,jdbcType=CHAR},
      Birthday = #{birthday,jdbcType=DATE},
      DeptID = #{deptID,jdbcType=CHAR},
      Phone = #{phone,jdbcType=CHAR},
      AccountNumber = #{accountNumber,jdbcType=VARCHAR},
      Degree = #{degree,jdbcType=CHAR},
      Title = #{title,jdbcType=CHAR},
      Comment = #{comment,jdbcType=VARCHAR}
    where TeacherID = #{teacherID,jdbcType=CHAR}
  </update>
  <select id="selectByAccountNumber" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from teacher
    where AccountNumber = #{accountNumber,jdbcType=VARCHAR}
  </select>
  <select id="getTeacherNameByPrimaryKey" resultType="java.lang.String" parameterType="java.lang.String" >
    select
    TeacherName
    from teacher
    where TeacherID = #{teacherID,jdbcType=CHAR}
  </select>
  <select id="getAllTeacherIDByDept" resultType="java.lang.String" parameterType="com.springmvc.po.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    TeacherID
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="getAllTeacherByDept" resultMap="BaseResultMap" parameterType="com.springmvc.po.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Example_Where_Clause"/>
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>