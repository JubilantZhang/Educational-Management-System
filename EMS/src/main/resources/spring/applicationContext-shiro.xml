<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--配置组件扫描器-->
    <context:component-scan base-package="com.springmvc.service"></context:component-scan>
    <context:component-scan base-package="com.springmvc.Realm"></context:component-scan>

    <!--配置权限管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--我们自定义的realm-->
        <property name="realm" ref="userShiro"></property>
        <!--缓存管理器-->
        <property name="cacheManager" ref="cacheManager"></property>
    </bean>

    <!--缓存管理器-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
    </bean>

    <!--自定义的realm-->
    <bean id="userShiro" class="com.springmvc.Realm.UserRealm">
        <!--<property name="credentialsMatcher">-->
            <!--<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
                <!--<property name="hashAlgorithmName" value="MD5"></property>-->
                <!--<property name="hashIterations" value="1024"></property>-->
            <!--</bean>-->
        <!--</property>-->
    </bean>

    <!--生命周期-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!-- 启用shiro注解 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"></property>
    </bean>

    <!--shiro提供的logout filter-->
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="loginform"></property>
    </bean>

    <!--shiroFilter-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--权限管理器-->
        <property name="securityManager" ref="securityManager"></property>
        <!--&lt;!&ndash;登录地址&ndash;&gt;-->
        <!--<property name="loginUrl" value="/"></property>-->
        <!--&lt;!&ndash;登录后跳转到业务页面&ndash;&gt;-->
        <!--<property name="successUrl" value="/"></property>-->
        <!--&lt;!&ndash;错误页面&ndash;&gt;-->
        <!--<property name="unauthorizedUrl" value="/"></property>-->
        <!--权限配置-->
        <!--
            配置哪些页面需要受保护
            以及访问这些页面需要的权限
            1).anon 可以被匿名访问
            2).authc 必须认证（即登录）后才能访问的页面
        -->
        <property name="filterChainDefinitions">
            <value>
                #这里相当于ini配置文件中的[urls]
                #url=拦截器[参数]，拦截器
                # /teacher/** = authc, perms[document:read]
                # 如果用户没有该角色，然后访问该 路径 会报 401错误

                /admin/** = authc, roles[admin]
                /teacher/** = authc, roles[teacher]
                /student/** = authc, roles[student]
                /dept/** = authc, roles[dept]

                # 当访问login时，不用进行认证（anon表示匿名）
                /login = anon

                /logout = logout

                # 配置静态资源可以匿名访问
                /css/** = anon
                /js/** = anon
                /img/** = anon
                /fonts/** = anon
                /include/** = anon

                # 除了上面额 /login 可以匿名访问，其他路径都需要登录访问
                # 如果没登录，就访问其他路径会跳转到 /login 登录
                
                /** = authc
            </value>
        </property>
    </bean>

</beans>